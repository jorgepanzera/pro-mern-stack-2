{"version":3,"file":"App.js","names":["API_URL","window","ENV","UI_API_ENDPOINT","console","log","IssueFilter","React","Component","IssueRow","props","state","issue","id","status","owner","created","toDateString","due","issue_title","IssueTable","issuesRows","issues","map","tableStyle","tableClass","IssueAdd","event","preventDefault","form","document","forms","namedItem","value","title","createIssue","handleSubmit","bind","IssueList","requestOptions","method","redirect","fetch","response","text","body","result","JSON","parse","jsonDateReviver","setState","Error","headers","stringify","loadData","IsFormFieldElement","element","request","request_url","config","ReactDOM","render","createElement","getElementById"],"sources":["../src/App.tsx"],"sourcesContent":["\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { jsonDateReviver } from \"./DateHandler\"\r\n\r\n\r\ninterface Issue {\r\n    id?: number\r\n    status: string\r\n    owner: string\r\n    effort?: number\r\n    created?: Date\r\n    due?: Date\r\n    issue_title: string\r\n}\r\n\r\n// obtener variable de entorno para la API URL, es a traves del env.js (en index.hmtl)\r\n// que arma en runtime el  uiserver.ts con el metodo get\r\nconst API_URL = window.ENV.UI_API_ENDPOINT\r\n\r\nconsole.log(`${API_URL}/issues`)\r\n\r\n\r\n\r\n// Array de issues, simulando un fetch de una API o db\r\n/*\r\nconst initialIssues = [\r\n  {\r\n    id: 1,\r\n    status: \"New\",\r\n    owner: \"Ravan\",\r\n    effort: 5,\r\n    created: new Date(\"2018-08-15\"),\r\n    due: undefined,\r\n    issue_title: \"Error in console when clicking Add\",\r\n  },\r\n  {\r\n    id: 2,\r\n    status: \"Assigned\",\r\n    owner: \"Eddie\",\r\n    effort: 14,\r\n    created: new Date(\"2018-08-16\"),\r\n    due: new Date(\"2018-08-30\"),\r\n    issue_title: \"Missing bottom border on panel\",\r\n  },\r\n  {\r\n    id: 3,\r\n    status: \"Ready\",\r\n    owner: \"Sofi\",\r\n    effort: 33,\r\n    created: new Date(\"2023-09-27\"),\r\n    due: new Date(\"2023-10-30\"),\r\n    issue_title: \"Read all book in English\",\r\n  },\r\n];\r\n*/\r\n\r\n// Definir props y state para cada componente\r\ntype IssueFilterProps = {}\r\n\r\ntype IssueFilterState = {}\r\n\r\nclass IssueFilter extends React.Component<{}, {}> {\r\n    render() {\r\n        return <div>This is a placeholder for the issue filter.</div>\r\n    }\r\n}\r\n\r\ntype IssueRowProps = { issue: Issue }\r\n\r\ntype IssueRowState = {}\r\n\r\nfunction IssueRow(props: IssueRowProps, state: IssueRowState) {\r\n    const issue = props.issue\r\n\r\n    console.log(`Rendering issue ${issue.id}`)\r\n    return (\r\n        <tr>\r\n            <td> {issue.id} </td>\r\n            <td> {issue.status} </td>\r\n            <td> {issue.owner} </td>\r\n            <td> {issue.created?.toDateString()} </td>\r\n            <td> {issue.due ? issue.due.toDateString() : ''} </td>\r\n            <td> {issue.issue_title} </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\ntype IssueTableProps = {\r\n    issues: Issue[]\r\n    tableStyle: React.CSSProperties\r\n    tableClass: string\r\n}\r\n\r\ntype IssueTableState = {}\r\n\r\nfunction IssueTable(props: IssueTableProps, state: IssueTableState) {\r\n    // Iterar con map en el array de issues del state, key para unique id de cada fila\r\n    //console.log(props.issues);\r\n    const issuesRows = props.issues.map((issue) => <IssueRow key={issue.id} issue={issue} />)\r\n    const tableStyle = props.tableStyle\r\n    const tableClass = props.tableClass\r\n\r\n    return (\r\n        <table className={tableClass} style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Status</th>\r\n                    <th>Owner</th>\r\n                    <th>Created Date</th>\r\n                    <th>Due Date</th>\r\n                    <th>Title</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{issuesRows}</tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n// explicitar el contenido de Props y State para IssueAddState\r\ntype IssueAddProps = { createIssue(issue: Issue): void }\r\n\r\ntype IssueAddState = {}\r\n\r\nclass IssueAdd extends React.Component<IssueAddProps, IssueAddState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n\r\n        //console.log(event.currentTarget);\r\n\r\n        const form = document.forms.namedItem('IssueSubmit') as HTMLFormElement\r\n        //const form = event.currentTarget;\r\n\r\n        let owner: string = form.owner?.value\r\n        let title: string = form.issue_title?.value\r\n\r\n        const issue: Issue = {\r\n            owner: form.owner?.value,\r\n            issue_title: form.issue_title?.value,\r\n            status: 'New',\r\n        }\r\n        this.props.createIssue(issue)\r\n        form.owner.value = ''\r\n        form.issue_title.value = ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form name=\"IssueSubmit\" onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" name=\"owner\" placeholder=\"Owner\" />\r\n                <input type=\"text\" name=\"issue_title\" placeholder=\"Title\" />\r\n                <button>Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n// clase que usa las otras 3 en un Fragment\r\n\r\ntype IssueListProps = {}\r\n\r\ntype IssueListState = {\r\n    issues: Issue[]\r\n}\r\n\r\nclass IssueList extends React.Component<IssueListProps, IssueListState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { issues: [] }\r\n        this.createIssue = this.createIssue.bind(this) // para poder usarlo en child elements, y que this siga apuntando a IssueList\r\n    }\r\n\r\n    /*\r\n  async loadData() {\r\n    // Aca va el fetch a la api GET ALL cuando exista\r\n    try {\r\n      const data = await request(\"http://localhost:3000/issues\", {\r\n        method: \"GET\",\r\n        headers: {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': 'http://localhost:3000' },\r\n      });\r\n\r\n      if (data) {\r\n        this.setState({ issues: data as Issue[] });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }*/\r\n\r\n    async loadData() {\r\n        let requestOptions: RequestInit = {\r\n            method: 'GET',\r\n            redirect: 'follow',\r\n        }\r\n\r\n        // consumir la api utilizando la libreria fetch\r\n        try {\r\n            let response = await fetch(`${API_URL}/issues`, requestOptions)\r\n            let body = await response.text()\r\n            //console.log(body);\r\n            let result = JSON.parse(body, jsonDateReviver)\r\n            //console.log(result);\r\n            if (result) {\r\n                this.setState({ issues: result?.issues as Issue[] })\r\n            }\r\n            /*\r\n     let data = await request(\"http://localhost:3000/issues\", requestOptions)\r\n      if (data) {\r\n        //this.setState({ issues: result?.issues as Issue[] });\r\n        this.setState({ issues: data?.issues as Issue[] });\r\n      }\r\n      */\r\n        } catch (err) {\r\n            throw new Error(`Error loadData/GetAllIssues : ${err}`)\r\n        }\r\n    }\r\n\r\n    async createIssue(issue: Issue) {\r\n        /*\r\n    issue.id = this.state.issues.length + 1;\r\n    issue.created = new Date();\r\n    const newIssueList = this.state.issues.slice();\r\n    newIssueList.push(issue);\r\n    this.setState({ issues: newIssueList });\r\n    */\r\n        let requestOptions: RequestInit = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(issue),\r\n        }\r\n        try {\r\n            let response = await fetch(`${API_URL}/issue/create`, requestOptions)\r\n            let body = await response.text()\r\n            console.log(body)\r\n            let result = JSON.parse(body, jsonDateReviver)\r\n            console.log(result)\r\n            if (result) {\r\n                await this.loadData()\r\n            }\r\n        } catch (err) {\r\n            throw new Error(`Error createIssue : ${err}`)\r\n        }\r\n    }\r\n\r\n    // cuando el componente esta pronto para render, le asigno el state inicial\r\n    componentDidMount() {\r\n        this.loadData()\r\n    }\r\n\r\n    render() {\r\n        const tableStyle: React.CSSProperties = {}\r\n        /*marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n      borderCollapse: \"collapse\",\r\n    };*/\r\n        // w-75 es 75% de tamanio relativo al parent, mx-auto la centra\r\n        const tableClass = 'table table-dark table-striped table-responsive w-75 mx-auto'\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Issue Tracker</h1>\r\n                <IssueFilter />\r\n                <hr />\r\n                <IssueTable\r\n                    issues={this.state.issues}\r\n                    tableStyle={tableStyle}\r\n                    tableClass={tableClass}\r\n                />\r\n                <hr />\r\n                <IssueAdd createIssue={this.createIssue} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction IsFormFieldElement(\r\n    element: Element\r\n): asserts element is HTMLInputElement | HTMLSelectElement | HTMLButtonElement {\r\n    // Customize this list as necessary −−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−−^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    if (!('value' in element)) {\r\n        throw new Error(`Element is not a form field element`)\r\n    }\r\n}\r\n\r\nasync function request<TResponse>(request_url: string, config: RequestInit): Promise<TResponse> {\r\n    const response = await fetch(request_url, config)\r\n\r\n    const body = await response.text()\r\n    const result = JSON.parse(body, jsonDateReviver)\r\n    return result\r\n}\r\n\r\n/*\r\nasync function graphQLFetch(query, variables = {}) {\r\n  try {\r\n    const response = await fetch('http://localhost:3000/graphql', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify({ query, variables })\r\n    });\r\n    const body = await response.text();\r\n    const result = JSON.parse(body, jsonDateReviver);\r\n\r\n    if (result.errors) {\r\n      const error = result.errors[0];\r\n      if (error.extensions.code == 'BAD_USER_INPUT') {\r\n        const details = error.extensions.exception.errors.join('\\n ');\r\n        alert(`${error.message}:\\n ${details}`);\r\n      } else {\r\n        alert(`${error.extensions.code}: ${error.message}`);\r\n      }\r\n    }\r\n    return result.data;\r\n  } catch (e) {\r\n    alert(`Error in sending data to server: ${e.message}`);\r\n  }\r\n}\r\n*/\r\n\r\n// Crear issue list\r\nReactDOM.render(React.createElement(IssueList), document.getElementById('contents'))\r\n"],"mappings":"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"}