{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.tsx","webpack:///./src/DateHandler.ts","webpack:///./src/IssueAdd.tsx","webpack:///./src/IssueFilter.tsx","webpack:///./src/IssueList.tsx","webpack:///./src/IssueRow.tsx","webpack:///./src/IssueTable.tsx"],"names":["container","document","getElementById","root","createRoot","element","render","dateRegex","RegExp","jsonDateReviver","key","value","test","Date","IssueAdd","props","event","preventDefault","form","forms","namedItem","owner","title","issue_title","issue","status","createIssue","handleSubmit","bind","React","Component","IssueFilter","API_URL","window","ENV","UI_API_ENDPOINT","IssueList","state","issues","requestOptions","method","redirect","fetch","response","text","body","result","JSON","parse","setState","Error","headers","stringify","console","log","loadData","tableStyle","tableClass","IssueRow","id","created","toDateString","due","IssueTable","issuesRows","map"],"mappings":"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","file":"app.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/App.tsx\",\"vendor\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createRoot } from 'react-dom/client'\r\nimport 'babel-polyfill'\r\nimport 'whatwg-fetch'\r\n\r\nimport { IssueList } from './IssueList'\r\n\r\n// elemento html que va a contener el codigo que vamos a inyectar por React\r\nconst container = document.getElementById('contents')\r\n\r\n// root a partir del html container, desde donde se va a renderizar\r\nconst root = createRoot(container!)\r\n\r\n// Crear issue list y la renderizo\r\nconst element = <IssueList />\r\nroot.render(element)\r\n","const dateRegex = new RegExp('^\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d')\r\n\r\n// Evaluar campos dentro de un json que cumplan con dateRegex, y devolver una fecha si es asi\r\nexport function jsonDateReviver(key: any, value: any) {\r\n    if (dateRegex.test(value)) return new Date(value)\r\n    return value\r\n}","import React from \"react\"\r\nimport Issue from \"./types/IssueInterface\"\r\n\r\n// explicitar el contenido de Props y State para IssueAddState\r\nexport type IssueAddProps = { createIssue(issue: Issue): void }\r\n\r\nexport type IssueAddState = {}\r\n\r\nexport class IssueAdd extends React.Component<IssueAddProps, IssueAddState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n\r\n        //console.log(event.currentTarget);\r\n\r\n        const form = document.forms.namedItem('IssueSubmit') as HTMLFormElement\r\n        //const form = event.currentTarget;\r\n\r\n        let owner: string = form.owner?.value\r\n        let title: string = form.issue_title?.value\r\n\r\n        const issue: Issue = {\r\n            owner: form.owner?.value,\r\n            issue_title: form.issue_title?.value,\r\n            status: 'New',\r\n        }\r\n        this.props.createIssue(issue)\r\n        form.owner.value = ''\r\n        form.issue_title.value = ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form name=\"IssueSubmit\" onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" name=\"owner\" placeholder=\"Owner\" />\r\n                <input type=\"text\" name=\"issue_title\" placeholder=\"Title\" />\r\n                <button>Add</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React from \"react\"\r\n\r\n// Definir props y state para cada componente\r\nexport type IssueFilterProps = {}\r\n\r\nexport type IssueFilterState = {}\r\n\r\nexport class IssueFilter extends React.Component<{}, {}> {\r\n    render() {\r\n        return <div>This is a placeholder for the issue filter.</div>\r\n    }\r\n}\r\n\r\n","// obtener variable de entorno para la API URL, es a traves del env.js (en index.hmtl)\r\n\r\nimport React from 'react'\r\nimport { jsonDateReviver } from './DateHandler'\r\nimport { IssueAdd } from './IssueAdd'\r\nimport { IssueFilter } from './IssueFilter'\r\nimport { IssueTable } from './IssueTable'\r\nimport Issue from './types/IssueInterface'\r\n\r\n// que arma en runtime el  uiserver.ts con el metodo get\r\nconst API_URL = window.ENV.UI_API_ENDPOINT\r\n\r\n// clase que usa las otras 3 en un Fragment\r\n\r\nexport type IssueListProps = {}\r\n\r\nexport type IssueListState = {\r\n    issues: Issue[]\r\n}\r\n\r\nexport class IssueList extends React.Component<IssueListProps, IssueListState> {\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { issues: [] }\r\n        this.createIssue = this.createIssue.bind(this) // para poder usarlo en child elements, y que this siga apuntando a IssueList\r\n    }\r\n\r\n    async loadData() {\r\n        let requestOptions: RequestInit = {\r\n            method: 'GET',\r\n            redirect: 'follow',\r\n        }\r\n\r\n        // consumir la api utilizando la libreria fetch\r\n        try {\r\n            let response = await fetch(`${API_URL}/issues`, requestOptions)\r\n            let body = await response.text()\r\n            //console.log(body);\r\n            let result = JSON.parse(body, jsonDateReviver)\r\n            //console.log(result);\r\n            if (result) {\r\n                this.setState({ issues: result?.issues as Issue[] })\r\n            }\r\n            /*\r\n     let data = await request(\"http://localhost:3000/issues\", requestOptions)\r\n      if (data) {\r\n        //this.setState({ issues: result?.issues as Issue[] });\r\n        this.setState({ issues: data?.issues as Issue[] });\r\n      }\r\n      */\r\n        } catch (err) {\r\n            throw new Error(`Error loadData/GetAllIssues : ${err}`)\r\n        }\r\n    }\r\n\r\n    async createIssue(issue: Issue) {\r\n\r\n        let requestOptions: RequestInit = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(issue),\r\n        }\r\n        try {\r\n            let response = await fetch(`${API_URL}/issue/create`, requestOptions)\r\n            let body = await response.text()\r\n            console.log(body)\r\n            let result = JSON.parse(body, jsonDateReviver)\r\n            console.log(result)\r\n            if (result) {\r\n                await this.loadData()\r\n            }\r\n        } catch (err) {\r\n            throw new Error(`Error createIssue : ${err}`)\r\n        }\r\n    }\r\n\r\n    // cuando el componente esta pronto para render, le asigno el state inicial\r\n    componentDidMount() {\r\n        this.loadData()\r\n    }\r\n\r\n    render() {\r\n        const tableStyle: React.CSSProperties = {}\r\n\r\n        // w-75 es 75% de tamanio relativo al parent, mx-auto la centra\r\n        const tableClass = 'table table-dark table-striped table-responsive w-75 mx-auto'\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <h1>Issue Tracker</h1>\r\n                <IssueFilter />\r\n                <hr />\r\n                <IssueTable\r\n                    issues={this.state.issues}\r\n                    tableStyle={tableStyle}\r\n                    tableClass={tableClass}\r\n                />\r\n                <hr />\r\n                <IssueAdd createIssue={this.createIssue} />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Issue from './types/IssueInterface'\r\n\r\ntype IssueRowProps = { issue: Issue }\r\n\r\ntype IssueRowState = {}\r\n\r\nexport function IssueRow(props: IssueRowProps, state: IssueRowState) {\r\n    const issue = props.issue\r\n\r\n    console.log(`Rendering issue ${issue.id}`)\r\n    return (\r\n        <tr>\r\n            <td> {issue.id} </td>\r\n            <td> {issue.status} </td>\r\n            <td> {issue.owner} </td>\r\n            <td> {issue.created?.toDateString()} </td>\r\n            <td> {issue.due ? issue.due.toDateString() : ''} </td>\r\n            <td> {issue.issue_title} </td>\r\n        </tr>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { IssueRow } from \"./IssueRow\"\r\nimport Issue from \"./types/IssueInterface\"\r\n\r\nexport type IssueTableProps = {\r\n    issues: Issue[]\r\n    tableStyle: React.CSSProperties\r\n    tableClass: string\r\n}\r\n\r\nexport type IssueTableState = {}\r\n\r\nexport function IssueTable(props: IssueTableProps, state: IssueTableState) {\r\n    // Iterar con map en el array de issues del state, key para unique id de cada fila\r\n    //console.log(props.issues);\r\n    const issuesRows = props.issues.map((issue) => <IssueRow key={issue.id} issue={issue} />)\r\n    const tableStyle = props.tableStyle\r\n    const tableClass = props.tableClass\r\n\r\n    return (\r\n        <table className={tableClass} style={tableStyle}>\r\n            <thead>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <th>Status</th>\r\n                    <th>Owner</th>\r\n                    <th>Created Date</th>\r\n                    <th>Due Date</th>\r\n                    <th>Title</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>{issuesRows}</tbody>\r\n        </table>\r\n    )\r\n}"],"sourceRoot":""}